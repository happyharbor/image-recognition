service: image-recognition
# app and org for use with dashboard.serverless.com
#app: image-recognition
#org: happyharbor

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

custom:
  bucket-name: ${self:service}-${sls:stage}-blobs

provider:
  name: aws
  runtime: java11
  lambdaHashingVersion: 20201221
  httpApi:
    cors: true

# you can overwrite defaults here
#  stage: dev
  region: eu-central-1

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:PutItem"
        - "dynamodb:GetItem"
      Resource: "arn:aws:dynamodb:${self:provider.region}:${aws:accountId}:table/${self:resources.Resources.BlobsTable.Properties.TableName}"
    - Effect: "Allow"
      Action:
        - "s3:PutObject"
        - "s3:GetObject"
      Resource:
        - "arn:aws:s3:::${self:custom.bucket-name}/*"
    - Effect: "Allow"
      Action:
        - "rekognition:DetectLabels"
      Resource:
        - "*"

  environment:
    DYNAMO_DB_TABLE_NAME: ${self:resources.Resources.BlobsTable.Properties.TableName}
    REGION: ${self:provider.region}
    BUCKET_NAME: ${self:custom.bucket-name}

package:
  artifact: build/distributions/image-recognition-1.0-SNAPSHOT.zip

functions:
  create-blob:
    handler: io.happyharbor.image.recognition.app.CreateBlobApp
    events:
      - httpApi:
          path: /blobs
          method: post

  process-blob:
    handler: io.happyharbor.image.recognition.app.ProcessBlobApp
    events:
      - s3: ${self:custom.bucket-name}

  make-callback:
    handler: io.happyharbor.image.recognition.app.MakeCallbackApp
    events:
      - stream:
          type: dynamodb
          arn:
            !GetAtt BlobsTable.StreamArn

  get-blob-info:
    handler: io.happyharbor.image.recognition.app.GetBlobInfoApp
    events:
      - httpApi:
          path: /blobs/{blob_id}
          method: get

resources:
  Resources:
    BlobsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: blobs-table-${sls:stage}
        AttributeDefinitions:
          - AttributeName: blobId
            AttributeType: S
        KeySchema:
          - AttributeName: blobId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
